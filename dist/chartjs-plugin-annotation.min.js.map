{"version":3,"file":"chartjs-plugin-annotation.min.js","sources":["../src/events.js","../src/types/box.js","../src/types/line.js","../src/annotation.js","../src/index.js"],"sourcesContent":["import {distanceBetweenPoints, callback as callHandler} from 'chart.js/helpers';\n\nconst clickHooks = ['click', 'dblclick'];\nconst moveHooks = ['enter', 'leave'];\nconst hooks = clickHooks.concat(moveHooks);\n\nexport function updateListeners(chart, state, options) {\n\tconst annotations = options.annotations || [];\n\tstate.listened = false;\n\n\thooks.forEach(hook => {\n\t\tif (typeof options[hook] === 'function') {\n\t\t\tstate.listened = true;\n\t\t\tstate.listeners[hook] = options[hook];\n\t\t}\n\t});\n\tmoveHooks.forEach(hook => {\n\t\tif (typeof options[hook] === 'function') {\n\t\t\tstate.moveListened = true;\n\t\t}\n\t});\n\n\tif (!state.listened || !state.moveListened) {\n\t\tannotations.forEach(scope => {\n\t\t\tif (!state.listened) {\n\t\t\t\tclickHooks.forEach(hook => {\n\t\t\t\t\tif (typeof scope[hook] === 'function') {\n\t\t\t\t\t\tstate.listened = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (!state.moveListened) {\n\t\t\t\tmoveHooks.forEach(hook => {\n\t\t\t\t\tif (typeof scope[hook] === 'function') {\n\t\t\t\t\t\tstate.listened = true;\n\t\t\t\t\t\tstate.moveListened = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n}\n\nexport function handleEvent(chart, state, event, options) {\n\tif (state.listened) {\n\t\tswitch (event.type) {\n\t\tcase 'mousemove':\n\t\tcase 'mouseout':\n\t\t\thandleMoveEvents(chart, state, event);\n\t\t\tbreak;\n\t\tcase 'click':\n\t\t\thandleClickEvents(chart, state, event, options);\n\t\t\tbreak;\n\t\tdefault:\n\t\t}\n\t}\n}\n\nfunction handleMoveEvents(chart, state, event) {\n\tif (!state.moveListened) {\n\t\treturn;\n\t}\n\n\tlet element;\n\n\tif (event.type === 'mousemove') {\n\t\telement = getNearestItem(state.elements, event);\n\t}\n\n\tconst previous = state.hovered;\n\tstate.hovered = element;\n\n\tdispatchMoveEvents(chart, state, previous, element);\n}\n\nfunction dispatchMoveEvents(chart, state, previous, element) {\n\tif (previous && previous !== element) {\n\t\tdispatchEvent(chart, state, previous.options.leave || state.listeners.leave, previous);\n\t}\n\tif (element && element !== previous) {\n\t\tdispatchEvent(chart, state, element.options.enter || state.listeners.enter, element);\n\t}\n}\n\nfunction handleClickEvents(chart, state, event, options) {\n\tconst listeners = state.listeners;\n\tconst element = getNearestItem(state.elements, event);\n\tif (element) {\n\t\tconst elOpts = element.options;\n\t\tconst dblclick = elOpts.dblclick || listeners.dblclick;\n\t\tconst click = elOpts.click || listeners.click;\n\t\tif (element.clickTimeout) {\n\t\t\t// 2nd click before timeout, so its a double click\n\t\t\tclearTimeout(element.clickTimeout);\n\t\t\tdelete element.clickTimeout;\n\t\t\tdispatchEvent(chart, state, dblclick, element);\n\t\t} else if (dblclick) {\n\t\t\t// if there is a dblclick handler, wait for dblClickSpeed ms before deciding its a click\n\t\t\telement.clickTimeout = setTimeout(() => {\n\t\t\t\tdelete element.clickTimeout;\n\t\t\t\tdispatchEvent(chart, state, click, element);\n\t\t\t}, options.dblClickSpeed);\n\t\t} else {\n\t\t\t// no double click handler, just call the click handler directly\n\t\t\tdispatchEvent(chart, state, click, element);\n\t\t}\n\t}\n}\n\nfunction dispatchEvent(chart, _state, handler, element) {\n\tcallHandler(handler, [{chart, element}]);\n}\n\nfunction getNearestItem(elements, position) {\n\tlet minDistance = Number.POSITIVE_INFINITY;\n\n\treturn elements\n\t\t.filter((element) => element.inRange(position.x, position.y))\n\t\t.reduce((nearestItems, element) => {\n\t\t\tconst center = element.getCenterPoint();\n\t\t\tconst distance = distanceBetweenPoints(position, center);\n\n\t\t\tif (distance < minDistance) {\n\t\t\t\tnearestItems = [element];\n\t\t\t\tminDistance = distance;\n\t\t\t} else if (distance === minDistance) {\n\t\t\t\t// Can have multiple items at the same distance in which case we sort by size\n\t\t\t\tnearestItems.push(element);\n\t\t\t}\n\n\t\t\treturn nearestItems;\n\t\t}, [])\n\t\t.sort((a, b) => {\n\t\t\t// If there are multiple elements equally close,\n\t\t\t// sort them by size, then by index\n\t\t\tconst sizeA = a.getArea();\n\t\t\tconst sizeB = b.getArea();\n\t\t\treturn (sizeA > sizeB || sizeA < sizeB) ? sizeA - sizeB : a._index - b._index;\n\t\t})\n\t\t.slice(0, 1)[0]; // return only the top item\n}\n","import {Element} from 'chart.js';\n\nexport default class BoxAnnotation extends Element {\n\tinRange(mouseX, mouseY, useFinalPosition) {\n\t\tconst {x, y, width, height} = this.getProps(['x', 'y', 'width', 'height'], useFinalPosition);\n\n\t\treturn mouseX >= x &&\n\t\t\tmouseX <= x + width &&\n\t\t\tmouseY >= y &&\n\t\t\tmouseY <= y + height;\n\t}\n\n\tgetCenterPoint(useFinalPosition) {\n\t\tconst {x, y, width, height} = this.getProps(['x', 'y', 'width', 'height'], useFinalPosition);\n\t\treturn {\n\t\t\tx: x + width / 2,\n\t\t\ty: y + height / 2\n\t\t};\n\t}\n\n\tdraw(ctx) {\n\t\tconst {x, y, width, height, options} = this;\n\n\t\tctx.save();\n\n\t\tctx.lineWidth = options.borderWidth;\n\t\tctx.strokeStyle = options.borderColor;\n\t\tctx.fillStyle = options.backgroundColor;\n\n\t\tctx.fillRect(x, y, width, height);\n\t\tctx.strokeRect(x, y, width, height);\n\n\t\tctx.restore();\n\t}\n}\n\nBoxAnnotation.id = 'boxAnnotation';\n\nBoxAnnotation.defaults = {\n\tdisplay: true,\n\tborderWidth: 1\n};\n\nBoxAnnotation.defaultRoutes = {\n\tborderColor: 'color',\n\tbackgroundColor: 'color'\n};\n","import {Element, defaults} from 'chart.js';\nimport {isArray, fontString, toRadians} from 'chart.js/helpers';\n\nconst PI = Math.PI;\nconst HALF_PI = PI / 2;\n\nconst pointInLine = (p1, p2, t) => ({x: p1.x + t * (p2.x - p1.x), y: p1.y + t * (p2.y - p1.y)});\nconst interpolateX = (y, p1, p2) => pointInLine(p1, p2, Math.abs((y - p1.y) / (p2.y - p1.y))).x;\nconst interpolateY = (x, p1, p2) => pointInLine(p1, p2, Math.abs((x - p1.x) / (p2.x - p1.x))).y;\n\nexport default class LineAnnotation extends Element {\n\tintersects(x, y, epsilon) {\n\t\tepsilon = epsilon || 0.001;\n\t\tconst me = this;\n\t\tconst p1 = {x: me.x, y: me.y};\n\t\tconst p2 = {x: me.x2, y: me.y2};\n\t\tconst dy = interpolateY(x, p1, p2);\n\t\tconst dx = interpolateX(y, p1, p2);\n\t\treturn (\n\t\t\t(!isFinite(dy) || Math.abs(y - dy) < epsilon) &&\n\t\t\t(!isFinite(dx) || Math.abs(x - dx) < epsilon)\n\t\t);\n\t}\n\n\tlabelIsVisible() {\n\t\tconst label = this.options.label;\n\t\treturn label && label.enabled && label.content;\n\t}\n\n\tisOnLabel(x, y) {\n\t\tconst labelRect = this.labelRect || {};\n\t\tconst w2 = labelRect.width / 2;\n\t\tconst h2 = labelRect.height / 2;\n\t\treturn this.labelIsVisible() &&\n\t\t\tx >= labelRect.x - w2 &&\n\t\t\tx <= labelRect.x + w2 &&\n\t\t\ty >= labelRect.y - h2 &&\n\t\t\ty <= labelRect.y + h2;\n\t}\n\n\tinRange(x, y) {\n\t\tconst epsilon = this.options.borderWidth || 1;\n\t\treturn this.intersects(x, y, epsilon) || this.isOnLabel(x, y);\n\t}\n\n\tgetCenterPoint() {\n\t\treturn {\n\t\t\tx: (this.x2 + this.x) / 2,\n\t\t\ty: (this.y2 + this.y) / 2\n\t\t};\n\t}\n\n\tdraw(ctx) {\n\t\tconst {x, y, x2, y2, options} = this;\n\t\tctx.save();\n\n\t\tctx.lineWidth = options.borderWidth;\n\t\tctx.strokeStyle = options.borderColor;\n\n\t\tif (ctx.setLineDash) {\n\t\t\tctx.setLineDash(options.borderDash);\n\t\t}\n\t\tctx.lineDashOffset = options.borderDashOffset;\n\n\t\t// Draw\n\t\tctx.beginPath();\n\t\tctx.moveTo(x, y);\n\t\tctx.lineTo(x2, y2);\n\t\tctx.stroke();\n\n\t\tif (this.labelIsVisible()) {\n\t\t\tdrawLabel(ctx, this);\n\t\t}\n\n\t\tctx.restore();\n\t}\n}\n\nLineAnnotation.id = 'lineAnnotation';\nLineAnnotation.defaults = {\n\tdisplay: true,\n\tborderDash: [],\n\tborderDashOffset: 0,\n\tlabel: {\n\t\tbackgroundColor: 'rgba(0,0,0,0.8)',\n\t\tfont: {\n\t\t\tfamily: defaults.font.family,\n\t\t\tsize: defaults.font.size,\n\t\t\tstyle: 'bold',\n\t\t\tcolor: '#fff',\n\t\t},\n\t\txPadding: 6,\n\t\tyPadding: 6,\n\t\trotation: 0,\n\t\tcornerRadius: 6,\n\t\tposition: 'center',\n\t\txAdjust: 0,\n\t\tyAdjust: 0,\n\t\tenabled: false,\n\t\tcontent: null\n\t}\n};\n\nfunction calculateAutoRotation(line) {\n\tconst {x, y, x2, y2} = line;\n\tlet cathetusAdjacent, cathetusOpposite;\n\tif (line.options.mode === 'horizontal') {\n\t\tcathetusAdjacent = y2 > y ? x2 - x : -(x2 - x);\n\t\tcathetusOpposite = Math.abs(y - y2);\n\t} else {\n\t\tcathetusAdjacent = Math.abs(x - x2);\n\t\tcathetusOpposite = x2 > x ? y2 - y : -(y2 - y);\n\t}\n\treturn Math.atan(cathetusOpposite / cathetusAdjacent);\n}\n\nfunction drawLabel(ctx, line) {\n\tconst label = line.options.label;\n\n\tctx.font = fontString(\n\t\tlabel.font.size,\n\t\tlabel.font.style,\n\t\tlabel.font.family\n\t);\n\tctx.textAlign = 'center';\n\n\tconst {width, height} = measureLabel(ctx, label);\n\tconst pos = calculateLabelPosition(line, width, height);\n\tconst rotation = label.rotation === 'auto' ? calculateAutoRotation(line) : toRadians(label.rotation);\n\n\tline.labelRect = {x: pos.x, y: pos.y, width, height};\n\n\tctx.translate(pos.x, pos.y);\n\tctx.rotate(rotation);\n\n\tctx.fillStyle = label.backgroundColor;\n\troundedRect(ctx, -(width / 2), -(height / 2), width, height, label.cornerRadius);\n\tctx.fill();\n\n\tctx.fillStyle = label.font.color;\n\tif (isArray(label.content)) {\n\t\tlet textYPosition = -(height / 2) + label.yPadding;\n\t\tfor (let i = 0; i < label.content.length; i++) {\n\t\t\tctx.textBaseline = 'top';\n\t\t\tctx.fillText(\n\t\t\t\tlabel.content[i],\n\t\t\t\t-(width / 2) + (width / 2),\n\t\t\t\ttextYPosition\n\t\t\t);\n\n\t\t\ttextYPosition += label.font.size + label.yPadding;\n\t\t}\n\t} else {\n\t\tctx.textBaseline = 'middle';\n\t\tctx.fillText(label.content, 0, 0);\n\t}\n}\n\nconst widthCache = new Map();\nfunction measureLabel(ctx, label) {\n\tconst content = label.content;\n\tconst lines = isArray(content) ? content : [content];\n\tconst count = lines.length;\n\tlet width = 0;\n\tfor (let i = 0; i < count; i++) {\n\t\tconst text = lines[i];\n\t\tif (!widthCache.has(text)) {\n\t\t\twidthCache.set(text, ctx.measureText(text).width);\n\t\t}\n\t\twidth = Math.max(width, widthCache.get(text));\n\t}\n\twidth += 2 * label.xPadding;\n\n\treturn {\n\t\twidth,\n\t\theight: count * label.font.size + ((count + 1) * label.yPadding)\n\t};\n}\n\nfunction calculateLabelPosition(line, width, height) {\n\tconst label = line.options.label;\n\tconst {xPadding, xAdjust, yPadding, yAdjust} = label;\n\tconst p1 = {x: line.x, y: line.y};\n\tconst p2 = {x: line.x2, y: line.y2};\n\tlet x, y, pt;\n\n\tswitch (label.position) {\n\tcase 'top':\n\t\ty = yPadding + yAdjust;\n\t\tx = interpolateX(y, p1, p2);\n\t\tbreak;\n\tcase 'bottom':\n\t\ty = height - yPadding + yAdjust;\n\t\tx = interpolateX(y, p1, p2);\n\t\tbreak;\n\tcase 'left':\n\t\tx = xPadding + xAdjust;\n\t\ty = interpolateY(x, p1, p2);\n\t\tbreak;\n\tcase 'right':\n\t\tx = width - xPadding + xAdjust;\n\t\ty = interpolateY(x, p1, p2);\n\t\tbreak;\n\tdefault:\n\t\tpt = pointInLine(p1, p2, 0.5);\n\t\tx = pt.x + xAdjust;\n\t\ty = pt.y + yAdjust;\n\t}\n\treturn {x, y};\n}\n\n\n/**\n * Creates a \"path\" for a rectangle with rounded corners at position (x, y) with a\n * given size (width, height) and the same `radius` for all corners.\n * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\n * @param {number} x - The x axis of the coordinate for the rectangle starting point.\n * @param {number} y - The y axis of the coordinate for the rectangle starting point.\n * @param {number} width - The rectangle's width.\n * @param {number} height - The rectangle's height.\n * @param {number} radius - The rounded amount (in pixels) for the four corners.\n * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?\n */\nfunction roundedRect(ctx, x, y, width, height, radius) {\n\tif (radius) {\n\t\tconst r = Math.min(radius, height / 2, width / 2);\n\t\tconst left = x + r;\n\t\tconst top = y + r;\n\t\tconst right = x + width - r;\n\t\tconst bottom = y + height - r;\n\n\t\tctx.moveTo(x, top);\n\t\tif (left < right && top < bottom) {\n\t\t\tctx.arc(left, top, r, -PI, -HALF_PI);\n\t\t\tctx.arc(right, top, r, -HALF_PI, 0);\n\t\t\tctx.arc(right, bottom, r, 0, HALF_PI);\n\t\t\tctx.arc(left, bottom, r, HALF_PI, PI);\n\t\t} else if (left < right) {\n\t\t\tctx.moveTo(left, y);\n\t\t\tctx.arc(right, top, r, -HALF_PI, HALF_PI);\n\t\t\tctx.arc(left, top, r, HALF_PI, PI + HALF_PI);\n\t\t} else if (top < bottom) {\n\t\t\tctx.arc(left, top, r, -PI, 0);\n\t\t\tctx.arc(left, bottom, r, 0, PI);\n\t\t} else {\n\t\t\tctx.arc(left, top, r, -PI, PI);\n\t\t}\n\t\tctx.closePath();\n\t\tctx.moveTo(x, y);\n\t} else {\n\t\tctx.rect(x, y, width, height);\n\t}\n}\n","import {Animations} from 'chart.js';\nimport {clipArea, unclipArea, isFinite, merge, valueOrDefault, callback as callCallback, isObject} from 'chart.js/helpers';\nimport {handleEvent, updateListeners} from './events';\nimport BoxAnnotation from './types/box';\nimport LineAnnotation from './types/line';\n\nconst chartStates = new Map();\n\nconst annotationTypes = {\n\tbox: BoxAnnotation,\n\tline: LineAnnotation\n};\n\nexport default {\n\tid: 'annotation',\n\n\tbeforeInit(chart) {\n\t\tchartStates.set(chart, {\n\t\t\telements: [],\n\t\t\tlisteners: {},\n\t\t\tlistened: false,\n\t\t\tmoveListened: false,\n\t\t\tscales: new Set()\n\t\t});\n\t},\n\n\tbeforeUpdate(chart, args, options) {\n\t\tif (isObject(options.annotations)) {\n\t\t\tconst array = new Array();\n\t\t\tObject.keys(options.annotations).forEach(key => {\n\t\t\t\tconst value = options.annotations[key];\n\t\t\t\tif (isObject(value)) {\n\t\t\t\t\tvalue.id = key;\n\t\t\t\t\tarray.push(value);\n\t\t\t\t}\n\t\t\t});\n\t\t\toptions.annotations = array;\n\t\t}\n\n\t\tif (!args.mode) {\n\t\t\tbindAfterDataLimits(chart, options);\n\t\t}\n\t},\n\n\tafterUpdate(chart, args, options) {\n\t\tconst state = chartStates.get(chart);\n\t\tupdateListeners(chart, state, options);\n\t\tupdateElements(chart, state, options, args.mode);\n\t},\n\n\tbeforeDatasetsDraw(chart, options) {\n\t\tdraw(chart, options, 'beforeDatasetsDraw');\n\t},\n\n\tafterDatasetsDraw(chart, options) {\n\t\tdraw(chart, options, 'afterDatasetsDraw');\n\t},\n\n\tafterDraw(chart, options) {\n\t\tdraw(chart, options, 'afterDraw');\n\t},\n\n\tbeforeEvent(chart, event, _replay, options) {\n\t\tconst state = chartStates.get(chart);\n\t\thandleEvent(chart, state, event, options);\n\t},\n\n\tdestroy(chart) {\n\t\tchartStates.delete(chart);\n\t},\n\n\tdefaults: {\n\t\tdrawTime: 'afterDatasetsDraw',\n\t\tdblClickSpeed: 350, // ms\n\t\tannotations: {},\n\t\tanimation: {\n\t\t\tnumbers: {\n\t\t\t\tproperties: ['x', 'y', 'x2', 'y2', 'width', 'height'],\n\t\t\t\ttype: 'number'\n\t\t\t},\n\t\t}\n\t},\n};\n\nconst directUpdater = {\n\tupdate: Object.assign\n};\n\nfunction resolveAnimations(chart, animOpts, mode) {\n\tif (mode === 'reset' || mode === 'none' || mode === 'resize') {\n\t\treturn directUpdater;\n\t}\n\treturn new Animations(chart, animOpts);\n}\n\nfunction updateElements(chart, state, options, mode) {\n\tconst chartAnims = chart.options.animation;\n\tconst animOpts = chartAnims && merge({}, [chartAnims, options.animation]);\n\tconst animations = resolveAnimations(chart, animOpts, mode);\n\n\tconst elements = state.elements;\n\tconst annotations = options.annotations || [];\n\tconst count = annotations.length;\n\tconst start = elements.length;\n\n\tif (start < count) {\n\t\tconst add = count - start;\n\t\telements.splice(start, 0, ...new Array(add));\n\t} else if (start > count) {\n\t\telements.splice(count, start - count);\n\t}\n\tfor (let i = 0; i < annotations.length; i++) {\n\t\tconst annotation = annotations[i];\n\t\tlet el = elements[i];\n\t\tconst elType = annotationTypes[annotation.type] || annotationTypes.line;\n\t\tif (!el || !(el instanceof elType)) {\n\t\t\tel = elements[i] = new elType();\n\t\t}\n\t\tconst properties = calculateElementProperties(chart, annotation, elType.defaults);\n\t\tanimations.update(el, properties);\n\n\t\tconst display = typeof annotation.display === 'function' ? callCallback(annotation.display, [{chart, element:el}], this) : valueOrDefault(annotation.display, true);\n\t\tel._display = !!display;\n\t}\n}\n\nfunction scaleValue(scale, value, fallback) {\n\tvalue = scale.parse(value);\n\treturn isFinite(value) ? scale.getPixelForValue(value) : fallback;\n}\n\nfunction calculateElementProperties(chart, options, defaults) {\n\tconst scale = chart.scales[options.scaleID];\n\n\tlet {top: y, left: x, bottom: y2, right: x2} = chart.chartArea;\n\tlet min, max;\n\n\tif (scale) {\n\t\tmin = scaleValue(scale, options.value, NaN);\n\t\tmax = scaleValue(scale, options.endValue, min);\n\t\tif (scale.isHorizontal()) {\n\t\t\tx = min;\n\t\t\tx2 = max;\n\t\t} else {\n\t\t\ty = min;\n\t\t\ty2 = max;\n\t\t}\n\t} else {\n\t\tconst xScale = chart.scales[options.xScaleID];\n\t\tconst yScale = chart.scales[options.yScaleID];\n\t\tif (!xScale && !yScale) {\n\t\t\treturn {options: {}};\n\t\t}\n\n\t\tif (xScale) {\n\t\t\tmin = scaleValue(xScale, options.xMin, x);\n\t\t\tmax = scaleValue(xScale, options.xMax, x2);\n\t\t\tx = Math.min(min, max);\n\t\t\tx2 = Math.max(min, max);\n\t\t}\n\n\t\tif (yScale) {\n\t\t\tmin = scaleValue(yScale, options.yMin, y2);\n\t\t\tmax = scaleValue(yScale, options.yMax, y);\n\t\t\ty = Math.min(min, max);\n\t\t\ty2 = Math.max(min, max);\n\t\t}\n\t}\n\n\treturn {\n\t\tx,\n\t\ty,\n\t\tx2,\n\t\ty2,\n\t\twidth: x2 - x,\n\t\theight: y2 - y,\n\t\toptions: merge(Object.create(null), [defaults, options])\n\t};\n}\n\nfunction draw(chart, options, caller) {\n\tconst {ctx, chartArea} = chart;\n\tconst elements = chartStates.get(chart).elements;\n\n\tclipArea(ctx, chartArea);\n\tfor (let i = 0; i < elements.length; i++) {\n\t\tconst el = elements[i];\n\t\tif (el._display && (el.options.drawTime || options.drawTime || caller) === caller) {\n\t\t\tel.draw(ctx);\n\t\t}\n\t}\n\tunclipArea(ctx);\n}\n\nfunction bindAfterDataLimits(chart, options) {\n\tconst state = chartStates.get(chart);\n\tconst scaleSet = state.scales;\n\tconst scales = chart.scales || {};\n\tObject.keys(scales).forEach(id => {\n\t\tconst scale = chart.scales[id];\n\t\tif (scaleSet.has(scale)) {\n\t\t\treturn;\n\t\t}\n\t\tconst originalHook = scale.afterDataLimits;\n\t\tscale.afterDataLimits = function(...args) {\n\t\t\tif (originalHook) {\n\t\t\t\toriginalHook.apply(scale, [...args]);\n\t\t\t}\n\t\t\tadjustScaleRange(scale, state, options);\n\t\t};\n\t\tscaleSet.add(scale);\n\t});\n}\n\nfunction getAnnotationOptions(elements, options) {\n\tif (elements && elements.length) {\n\t\treturn elements.map(el => el.options);\n\t}\n\treturn options.annotations || [];\n}\n\nfunction adjustScaleRange(scale, state, options) {\n\tconst annotations = getAnnotationOptions(state.elements, options);\n\tconst range = getScaleLimits(scale, annotations);\n\tlet changed = false;\n\tif (isFinite(range.min) &&\n\t\ttypeof scale.options.min === 'undefined' &&\n\t\ttypeof scale.options.suggestedMin === 'undefined') {\n\t\tscale.min = range.min;\n\t\tchanged = true;\n\t}\n\tif (isFinite(range.max) &&\n\t\ttypeof scale.options.max === 'undefined' &&\n\t\ttypeof scale.options.suggestedMax === 'undefined') {\n\t\tscale.max = range.max;\n\t\tchanged = true;\n\t}\n\tif (changed && typeof scale.handleTickRangeOptions === 'function') {\n\t\tscale.handleTickRangeOptions();\n\t}\n}\n\nfunction getScaleLimits(scale, annotations) {\n\tconst axis = scale.axis;\n\tconst scaleID = scale.id;\n\tconst scaleIDOption = scale.axis + 'ScaleID';\n\tconst scaleAnnotations = annotations.filter(annotation => annotation[scaleIDOption] === scaleID || annotation.scaleID === scaleID);\n\tlet min = valueOrDefault(scale.min, Number.NEGATIVE_INFINITY);\n\tlet max = valueOrDefault(scale.max, Number.POSITIVE_INFINITY);\n\tscaleAnnotations.forEach(annotation => {\n\t\t['value', 'endValue', axis + 'Min', axis + 'Max'].forEach(prop => {\n\t\t\tif (prop in annotation) {\n\t\t\t\tconst value = annotation[prop];\n\t\t\t\tmin = Math.min(min, value);\n\t\t\t\tmax = Math.max(max, value);\n\t\t\t}\n\t\t});\n\t});\n\treturn {min, max};\n}\n","import {Chart} from 'chart.js';\nimport Annotation from './annotation';\nimport BoxAnnotation from './types/box';\nimport LineAnnotation from './types/line';\n\nChart.register(Annotation, BoxAnnotation, LineAnnotation);\n\nexport default Annotation;\n"],"names":["clickHooks","moveHooks","hooks","concat","handleEvent","chart","state","event","options","listened","type","moveListened","element","getNearestItem","elements","previous","hovered","dispatchEvent","leave","listeners","enter","dispatchMoveEvents","handleMoveEvents","elOpts","dblclick","click","clickTimeout","clearTimeout","setTimeout","dblClickSpeed","handleClickEvents","_state","handler","callHandler","position","minDistance","Number","POSITIVE_INFINITY","filter","inRange","x","y","reduce","nearestItems","center","getCenterPoint","distance","distanceBetweenPoints","push","sort","a","b","sizeA","getArea","sizeB","_index","slice","BoxAnnotation","Element","[object Object]","mouseX","mouseY","useFinalPosition","width","height","this","getProps","ctx","save","lineWidth","borderWidth","strokeStyle","borderColor","fillStyle","backgroundColor","fillRect","strokeRect","restore","id","defaults","display","defaultRoutes","PI","Math","HALF_PI","pointInLine","p1","p2","t","interpolateX","abs","interpolateY","LineAnnotation","epsilon","me","x2","y2","dy","dx","isFinite","label","enabled","content","labelRect","w2","h2","labelIsVisible","intersects","isOnLabel","setLineDash","borderDash","lineDashOffset","borderDashOffset","beginPath","moveTo","lineTo","stroke","line","font","fontString","size","style","family","textAlign","lines","isArray","count","length","i","text","widthCache","has","set","measureText","max","get","xPadding","yPadding","measureLabel","pos","xAdjust","yAdjust","pt","calculateLabelPosition","rotation","cathetusAdjacent","cathetusOpposite","mode","atan","calculateAutoRotation","toRadians","translate","rotate","radius","r","min","left","top","right","bottom","arc","closePath","rect","roundedRect","cornerRadius","fill","color","textYPosition","textBaseline","fillText","drawLabel","Map","chartStates","annotationTypes","box","scales","Set","args","isObject","annotations","array","Array","Object","keys","forEach","key","value","scaleSet","scale","originalHook","afterDataLimits","apply","map","el","getAnnotationOptions","range","axis","scaleID","scaleIDOption","scaleAnnotations","annotation","valueOrDefault","NEGATIVE_INFINITY","prop","getScaleLimits","changed","suggestedMin","suggestedMax","handleTickRangeOptions","adjustScaleRange","add","bindAfterDataLimits","hook","scope","updateListeners","chartAnims","animation","animOpts","merge","animations","directUpdater","Animations","resolveAnimations","start","splice","elType","properties","calculateElementProperties","update","callCallback","_display","updateElements","draw","_replay","delete","drawTime","numbers","assign","scaleValue","fallback","parse","getPixelForValue","chartArea","NaN","endValue","isHorizontal","xScale","xScaleID","yScale","yScaleID","xMin","xMax","yMin","yMax","create","caller","clipArea","unclipArea","Chart","register","Annotation"],"mappings":"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"}